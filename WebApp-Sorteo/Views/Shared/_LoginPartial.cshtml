@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark " asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="fa fa-user-circle" aria-hidden="true"></i>
                Hola, @User.Identity?.Name!
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-outline-danger text-dark" id="btnLogout">
                    Logout
                    <i class="fa-solid fa-right-from-bracket"></i>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">
                <i class="fa fa-user-plus" aria-hidden="true"></i>
                Register
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">
                Login
                <i class="fa-solid fa-right-to-bracket"></i>
            </a>
        </li>
    }
</ul>